LOAD_FILE	PROC	NEAR
	;es:si-file name
	;ds:dx-buffer
	;AX-TYPE
	;AX=0-EXE
	;AX=1-COM
	;AX=ELSE-OVERLAY
	
	PUSH	DX
	PUSH	SI
	PUSH	DI
	PUSH	DS
	PUSH	ES
	OR	AX,AX
	JZ	LOAD_EXE
	DEC	AX
	JZ	LOAD_COM
LOAD_3:	
	PUSH	DS
	PUSH	ES
	POP	DS
	XOR	AL,AL
	XCHG	SI,DX
	CALL	OPEN_FILE
	POP	DS
	JC	LOAD_ERROR
	MOV	DX,SI
	XOR	SI,SI
	MOV	BX,AX
LOAD_2:
	XOR	DI,DI
LOAD_1:
	MOV	CX,8000H
	PUSH	DX
	CALL	READ_FILE
	POP	DX
	JC	LOAD_ERROR
	MOV	CX,DS
	ADD	CX,800H
	MOV	DS,CX
	INC	DI
	CMP	AX,8000H
	JE	LOAD_1
	MOV	CX,AX	
	CALL	CLOSE_FILE
	DEC	DI
	SHL	CX,1
	SHR	DI,1
	RCR	CX,1
	MOV	BX,DI
	ADD	CX,SI
	JNC	LOAD_ERROR
	INC	BX
LOAD_ERROR:
	POP	ES
	POP	DS
	POP	DI
	POP	SI
	POP	DX
	RET
	;BX:CX-LENGHT
LOAD_COM:
	CALL	CREATE_PSP
	ADD	DX,100H
	JMP	SHORT	LOAD_3
LOAD_EXE:
	PUSH	DS
	PUSH	ES
	POP	DS
	XOR	AL,AL
	XCHG	SI,DX
	CALL	OPEN_FILE
	POP	DS
	JC	LOAD_ERROR
	MOV	BX,AX
	MOV	DX,SI
	PUSH	DX
	MOV	CX,20H
	CALL	READ_FILE
	POP	DX
	JC	LOAD_ERROR
	CALL	CREATE_PSP
	ADD	DX,100H
	MOV	AX,DS:[8H]
	PUSH	DX
	MOV	CL,4
	SHL	AX,CL
	MOV	SI,AX
	XOR	CX,CX
	MOV	DX,AX
	XOR	AL,AL
	CALL	LSEEK
	POP	DX
	JC	LOAD_ERROR
	JMP	SHORT	LOAD_2
ENDP
SAVE_FILE	PROC	NEAR
	;es:si-name
	;ds:dx-buffer
	;BX:cx-lenght
	PUSH	BX
	PUSH	CX
	PUSH	DX
	PUSH	SI
	PUSH	DI
	PUSH	DS
	PUSH	ES

	SHL	CX,1
	ADC	BX,BX
	INC	BX
	SHR	CX,1
	
	PUSH	DS
	PUSH	BX
	PUSH	CX
	PUSH	DX

	PUSH	ES
	POP	DS
	xor	cx,cx
	MOV	DX,SI
	MOV	AL,2
	CALL	CREATE_FILE
	POP	DX
	POP	DI
	POP	CX
	POP	DS
	JC	SAVE_ERROR

	MOV	BX,AX
SAVE_1:
	PUSH	CX
	XCHG	CX,DI
	CMP	DI,1
	JZ	SAVE_2
	XCHG	CX,DI
	MOV	CX,8000H
SAVE_2:
	PUSH	DX
	CALL	WRITE_FILE
	POP	DX
	POP	CX
	JC	SAVE_ERROR
	MOV	AX,DS
	ADD	AX,800H
	MOV	DS,AX
	LOOP	SAVE_1

	JC	SAVE_ERROR
	CALL	CLOSE_FILE
SAVE_FILE_EXIT:
	POP	ES
	POP	DS
	POP	DI
	POP	SI
	POP	DX
	POP	CX
	POP	BX
	RET
SAVE_ERROR:
	JMP	SHORT	SAVE_FILE_EXIT
ENDP
CLOSE_FILE	PROC	NEAR
	PUSH	CX
	PUSH	BX
	PUSH	DX
	PUSH	DS
	MOV	DS,CS:[OLD_ATTR_DS_]
	MOV	DX,CS:[OLD_ATTR_DX_]
	MOV	CX,CS:[OLD_ATTR_]
	MOV	AX,4301H
	INT	21H
	POP	DS
	POP	DX
	POP	BX
	JC	CLOSE_FILE_EXIT
	MOV	AH,3EH
	INT	21H
CLOSE_FILE_EXIT:
	POP	CX
	RET
OLD_ATTR_DS_	DW	0
OLD_ATTR_DX_	DW	0
ENDP
LSEEK	PROC	NEAR
	MOV	AH,42H
	INT	21H
	RET
ENDP
OPEN_FILE	PROC	NEAR
	PUSH	CX
	PUSH	DX
	MOV	AX,4300H
	INT	21H
	JC	OPEN_FILE_EXIT
	MOV	CS:[OLD_ATTR_],CX
	MOV	CS:[OLD_ATTR_DS_],DS
	MOV	CS:[OLD_ATTR_DX_],DX
	MOV	AX,4301H
	XOR	CX,CX
	INT	21H
	JC	OPEN_FILE_EXIT
	MOV	AL,2
	MOV	AH,3DH
	XOR	CX,CX
	INT	21H
	JC	OPEN_FILE_EXIT
OPEN_FILE_EXIT:
	POP	DX
	POP	CX
	RET
OLD_ATTR_	DW	0
ENDP
CREATE_FILE	PROC	NEAR
	PUSH	CX
	MOV	AH,3CH
	XOR	CX,CX
	MOV	CS:[OLD_ATTR_],CX
	MOV	CS:[OLD_ATTR_DS_],DS
	MOV	CS:[OLD_ATTR_DX_],DX
	INT	21H
	POP	CX
	RET
ENDP	
READ_FILE	PROC	NEAR
	MOV	AH,3FH
	INT	21H
	RET
ENDP
WRITE_FILE	PROC	NEAR
	MOV	AH,40H
	INT	21H
	RET
ENDP
CREATE_PSP	PROC	NEAR
	;DS:DX-PSP
	PUSH	BX
	PUSH	DX
	MOV	BX,DX
	MOV	DS:[BX+2],0A000H
	POP	DX
	POP	BX
	RET
ENDP