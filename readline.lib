read_line	proc	NEAR
	;DS:SI-STRING
	;ES:AX-FIRST
	;ES:BX-SECOND
	;ES:DX-NEW
	CMP	BYTE PTR DS:[SI],0
	JZ	READ_LINE_NONE_LINE
	XOR	CX,CX
	MOV	CS:[NEW_TABLE_],DX
	MOV	CS:[FIRST_TABLE_],AX
	MOV	CS:[SECOND_TABLE_],BX
	MOV	BX,AX
	MOV	CL,DS:[SI]
	INC	SI
READ_LINE_1:
	LODSB
	CMP	AL,' '
	JE	READ_LINE_VERIFY_COMMAND_FLAG
	JB	READ_LINE_UNRECOGNIZEBLE_SYMBOL
	CMP	AL,ES:[BX]
	JE	READ_LINE_SET_F_COMMAND_FLAG
	TEST	BYTE PTR CS:[FLAG_],10000000B
	JNZ	READ_LINE_3
	TEST	BYTE PTR CS:[FLAG_],01000000B
	JNZ	READ_LINE_3
	JMP	SHORT	READ_LINE_NONE_CONTROL_SYMBOL
READ_LINE_3:
	CALL	READ_LINE_COMMAND_PROCESSING
READ_LINE_2:
	LOOP	READ_LINE_1
	TEST	BYTE PTR CS:[FLAG_],10000000B
	JNZ	READ_LINE_NONE_COMMAND
	XOR	AX,AX
	CLC
	RET
READ_LINE_VERIFY_COMMAND_FLAG:
	TEST	BYTE PTR CS:[FLAG_],10000000B
	JNZ	READ_LINE_NONE_COMMAND
	AND	BYTE PTR CS:[FLAG_],0
	JMP	SHORT	READ_LINE_2
READ_LINE_SET_F_COMMAND_FLAG:
	CMP	CS:[FLAG_],0
	JNZ	READ_LINE_NONE_CONTROL_SYMBOL
	MOV	BYTE PTR CS:[FLAG_],10000000B
	JMP	SHORT	READ_LINE_2
READ_LINE_UNRECOGNIZEBLE_SYMBOL:
	MOV	AX,5
	STC
	RET
READ_LINE_NONE_LINE:
	MOV	AX,4
	STC
	RET
READ_LINE_NONE_CONTROL_SYMBOL:
	MOV	AX,3
	STC
	RET
READ_LINE_NONE_COMMAND:
	MOV	AX,1
	STC
	RET
READ_LINE_COMMAND_PROCESSING	PROC	NEAR
	PUSH	AX
	PUSH	BX
	PUSH	CX
	PUSH	BP
	TEST	CS:[FLAG_],01000000B
	JNZ	READ_LINE_SUB_COMMAND
	MOV	BX,CS:[FIRST_TABLE_]
	XOR	BP,BP
	INC	BX
READ_LINE_COM_1:
	CMP	AL,ES:[BX]
	JE	READ_LINE_COM_OK
	INC	BX
	CMP	BYTE PTR ES:[BX],0FFH
	JE	READ_LINE_COM_EXIT
	INC	BP
	INC	BP
	JMP	SHORT	READ_LINE_COM_1
READ_LINE_COM_OK:
	ADD	BP,CS:[NEW_TABLE_]
	CMP	WORD PTR ES:[BP],0
	JNZ	READ_LINE_REPEAT_USING_LETTER
	MOV	CS:[ADDR_TAB_],BP
	MOV	WORD PTR ES:[BP],1
	MOV	CS:[LETTER_],AL
	MOV	CS:[FLAG_],01000000B
	POP	BP
	POP	CX
	POP	BX
	POP	AX
	RET
READ_LINE_REPEAT_USING_LETTER:
	ADD	SP,10
	MOV	AX,2
	STC
	RET
READ_LINE_COM_EXIT:
	ADD	SP,10
	MOV	AX,6
	STC
	RET
READ_LINE_SUB_COMMAND:
	MOV	BX,CS:[SECOND_TABLE_]
	MOV	AH,CS:[LETTER_]	
	XOR	CX,CX
READ_LINE_SUB_COM_1:
	CMP	AH,ES:[BX]
	JE	READ_LINE_SUB_COM_OK
READ_LINE_SUB_COM_2:
	INC	BX
	CMP	BYTE PTR ES:[BX],0FEH
	JB	READ_LINE_SUB_COM_2
	CMP	BYTE PTR ES:[BX],0FFH
	JE	READ_LINE_SUB_COM_EXIT
	INC	BX
	JMP	SHORT	READ_LINE_SUB_COM_1
READ_LINE_SUB_COM_OK:
	INC	BX
	INC	CX
	CMP	BYTE PTR ES:[BX],0FEH
	JAE	READ_LINE_UNNECESSARY_SWITCH
	CMP	AL,ES:[BX]
	JNE	READ_LINE_SUB_COM_OK
	INC	CX
	XOR	AX,AX
	STC
	RCL	AX,CL
	MOV	BP,CS:[ADDR_TAB_]
	OR	ES:[BP],AX
READ_LINE_SUB_COM_EXIT:
	POP	BP
	POP	CX
	POP	BX
	POP	AX
	RET
READ_LINE_UNNECESSARY_SWITCH:
	ADD	SP,10
	MOV	AX,7
	STC
	RET
	
ENDP
FLAG_	DB	0
FIRST_TABLE_	DW	0
SECOND_TABLE_	DW	0
NEW_TABLE_	DW	0
LETTER_	DB	0
ADDR_TAB_	DW	0
ENDP